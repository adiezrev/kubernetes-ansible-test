---
- hosts: kubernetes-master-nodes:kubernetes-worker-nodes:fns-nodes
  become: yes
  vars_files:
  - "group_vars/global_vars.yaml"
  tasks:
  
  - name: Pone la IPs a /etc/hosts
    lineinfile:
      dest: /etc/hosts
      regexp: '.*{{ item }}$'
      line: "{{ hostvars[item].ansible_host }} {{item}}"
      state: present
    when: hostvars[item].ansible_host is defined
    with_items: "{{ groups.all }}"   
  
  - name: Activar transparent masquerading para que los PODs puedan comunicarse dentro del cluster mediante VXLAN
    shell: modprobe br_netfilter
        
  - name: Activar transparent masquerading para que los PODs puedan comunicarse dentro del cluster mediante VXLAN (firewall)
    firewalld:
      masquerade:
      state: enabled
      permanent: yes
      immediate: yes

  - name: Manejo del trafico del cortafuegos de kubernetes
    shell: sysctl --system
        
  - name: Quitar swap
    shell: swapoff -a

  - name: Comentando las entradas en in /etc/fstab
    replace:
      path: /etc/fstab
      regexp: '(^/.*swap*)'
      replace: '# \1'

  - name: Instalamos docker que ser√° el engine para ejecutar contenedores.
    dnf:
      name: "{{ packages_docker_engine }}"
      enablerepo: "{{ repo }}"
      state: latest
      allowerasing: yes
    
 - name: Inicializando los servicios de docker
   service:
      name: "{{ item }}"
      state: started
      enabled: yes
   with_items: "{{ services_docker_engine }}"      
    
 - name: Configurando el repositorio de kubernetes
   shell: "{{ kubernetes_repo }}"
    
 - name: Instalando Kubernetes
   dnf:
     name: "{{ packages }}"
     disable_excludes:  "{{ packages_disable_excludes }}"
     state: present
        
  - name: Inicializando los servicios
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
    with_items: "{{ services }}"   