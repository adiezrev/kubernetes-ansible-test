---
- hosts: kubernetes-master-nodes
  become: yes
  vars_files:
    - "group_vars/env_master.yaml"
  tasks:
  
  - name: Abre los puertos en el firewall
    firewalld:
      port: "{{ item }}"
      state: enabled
      permanent: yes
      immediate: yes
    with_items: "{{ master_ports }}"
    
  - name: Configuramos kudeadm
    shell: kubeadm config images pull
    
  - name: Configura reglas de acceso en el firewall para los workers
    firewalld:
      rich_rule: "rule family=ipv4 source address={{hostvars[item].ansible_host}}/32 accept"
      permanent: yes
      state: enabled
    with_items: "{{ groups['kubernetes-worker-nodes'] }}"
    
  - name: Permitimos el acceso de los contenedores a localhost
    firewalld:
      rich_rule: "rule family=ipv4 source address={{localhost_adress}} accept"
      permanent: yes
      state: enabled
      zone: public
    
  #- name: Reseteando kubeadmin
   # shell: kubeadm reset -f
    
  - name: Instalamos el plugin CNI
    shell: kubeadm init --pod-network-cidr "{{ cidr }}"
    register: output
    
  - name: Se guarda la informacion para su uso posterior
    local_action: "copy content={{ output.stdout }} dest={{ token_file }}"
    
  - name: Crea el directorio para la configuracion
    file:
      path: /root/.kube
      state: directory
    
  - name: Finalizando la configuracion
    shell: |
      cp -f /etc/kubernetes/admin.conf /root/.kube/config
      chown $(id -u):$(id -g) /root/.kube/config